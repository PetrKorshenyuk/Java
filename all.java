import java.util.Arrays;

public class Main {
    public static void main(String[] args) {
        // Тестирование программы
        // В каждом вызове метода testSort() передаем входной массив, ожидаемый результат и номер теста.
        testSort(new int[]{5, 3, 8, 1, 2, 7, 4, 6}, new int[]{1, 2, 3, 4, 5, 6, 7, 8}, 1, "Тестирует сортировку обычного массива.");
        testSort(new int[]{1, 2, 3, 4, 5}, new int[]{1, 2, 3, 4, 5}, 2, "Тестирует уже отсортированный массив.");
        testSort(new int[]{5, 4, 3, 2, 1}, new int[]{1, 2, 3, 4, 5}, 3, "Тестирует массив в обратном порядке.");
        testSort(new int[]{7, 7, 7, 7, 7}, new int[]{7, 7, 7, 7, 7}, 4, "Тестирует массив с одинаковыми элементами.");
        testSort(new int[]{8, 3}, new int[]{3, 8}, 5, "Тестирует массив из двух элементов.");
        testSort(new int[]{5, -3, 8, 1, -2, 7, -4, 6}, new int[]{-4, -3, -2, 1, 5, 6, 7, 8}, 6, "Тестирует массив с положительными и отрицательными числами.");
        testSort(new int[]{5}, new int[]{5}, 7, "Тестирует массив из одного элемента.");
        testSort(new int[]{10, 3, 7, 1, 5, 8, 4, 6}, new int[]{1, 3, 4, 5, 6, 7, 8, 10}, 8, "Тестирует массив с произвольными элементами.");
        testSort(new int[]{12, 5, 9, 1, 4, 11, 6, 8}, new int[]{1, 4, 5, 6, 8, 9, 11, 12}, 9, "Тестирует массив с различными значениями.");
        testSort(new int[]{100, 100, 100, 100, 99, 100, 100}, new int[]{99, 100, 100, 100, 100, 100, 100}, 10, "Тестирует массив с повторяющимися значениями.");
    }

    // Метод для тестирования сортировки
    // Принимает четыре аргумента: массив для сортировки, ожидаемый результат, номер теста и описание теста
    public static void testSort(int[] inputArray, int[] expectedResult, int testNumber, String testDescription) {
        // Копируем исходный массив, чтобы не изменять оригинал в процессе сортировки
        int[] arr = Arrays.copyOf(inputArray, inputArray.length);
        
        // Выводим номер теста и сам входной массив
        System.out.println("Тест " + testNumber + ": " + testDescription);  
        System.out.println("Входной массив: " + Arrays.toString(arr));

        // Сортировка массива пузырьком
        int n = arr.length;  // Сохраняем длину массива в переменной n
        for (int i = 0; i < n - 1; i++) {  // Внешний цикл отвечает за количество проходов
            for (int j = 0; j < n - 1 - i; j++) {  // Внутренний цикл сравнивает элементы массива
                if (arr[j] > arr[j + 1]) {  // Если текущий элемент больше следующего, меняем их местами
                    // Меняем элементы местами
                    int temp = arr[j];  // Временная переменная для хранения текущего элемента
                    arr[j] = arr[j + 1];  // Текущий элемент становится следующим
                    arr[j + 1] = temp;  // Следующий элемент становится текущим
                }
            }
        }

        // Сравнение полученного результата с ожидаемым
        boolean isPassed = Arrays.equals(arr, expectedResult);  // Метод Arrays.equals() сравнивает два массива на равенство

        // Вывод результата теста: ожидаемый результат, фактический результат и результат теста (Passed/Failed)
        System.out.printf("Ожидаемый результат: %s\n", Arrays.toString(expectedResult));  // Выводим ожидаемый результат
        System.out.printf("Полученный результат: %s\n", Arrays.toString(arr));  // Выводим фактический результат
        System.out.printf("Результат: %s\n\n", isPassed ? "Passed" : "Failed");  // Выводим "Passed", если тест пройден, или "Failed" в противном случае
    }
}
